{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31614\\\\desktop\\\\lambda\\\\front-end\\\\src\\\\components\\\\SignUp.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nexport default function Signup() {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const formSchema = yup.object().shape({\n    name: yup.string().required(2, \"Name is a required field.\"),\n    password: yup.string().required(\"Must include password.\")\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    formSchema.isValid(values).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [values]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitting \", values);\n    setValues({\n      username: \"\",\n      password: \"\"\n    });\n  };\n\n  const inputChange = e => {\n    e.persist();\n    const newFormData = { ...values,\n      [e.target.name]: e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    };\n    validateChange(e);\n    setValues(newFormData);\n  };\n\n  const validateChange = e => {\n    // Reach will allow us to \"reach\" into the schema and test only one part.\n    yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\"\n      });\n    }).catch(err => {\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Enter your Username\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    values: values.username,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Enter a password\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    values: values.password,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"));\n}","map":{"version":3,"sources":["C:/Users/31614/desktop/lambda/front-end/src/components/SignUp.js"],"names":["React","useState","useEffect","axios","yup","styled","useHistory","Signup","values","setValues","username","password","errors","setErrors","formSchema","object","shape","name","string","required","buttonDisabled","setButtonDisabled","isValid","then","valid","handleSubmit","e","preventDefault","console","log","inputChange","persist","newFormData","target","type","checked","value","validateChange","reach","validate","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function Signup() {\n    const [values, setValues] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    const [errors, setErrors] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n\n    const formSchema = yup.object().shape({\n        name: yup\n        .string()\n        .required(2, \"Name is a required field.\"), \n        password: yup\n          .string()\n          .required(\"Must include password.\"),\n      });\n\n      const [buttonDisabled, setButtonDisabled] = useState(true);\n\n      useEffect(() => {\n        formSchema.isValid(values).then(valid => {\n          setButtonDisabled(!valid);\n        });\n      }, [values]);\n\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submitting \", values);\n        setValues({\n            username: \"\",\n            password: \"\",\n        }); \n    };\n\n    const inputChange = e => {\n        e.persist();\n        const newFormData = {\n          ...values,\n          [e.target.name]:\n            e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n        };\n    \n        validateChange(e);\n        setValues(newFormData);\n      };\n\n      const validateChange = e => {\n        // Reach will allow us to \"reach\" into the schema and test only one part.\n        yup\n          .reach(formSchema, e.target.name)\n          .validate(e.target.value)\n          .then(valid => {\n            setErrors({\n              ...errors,\n              [e.target.name]: \"\"\n            });\n          })\n          .catch(err => {\n            setErrors({\n              ...errors,\n              [e.target.name]: err.errors[0]\n            });\n          });\n      };\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Enter your Username\n                    <input \n                    type='text'\n                    name='username'\n                    placeholder='username'\n                    values={values.username}\n                    onChange={inputChange}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>Enter a password\n \n                    <input \n                    type='password'\n                    name='password'\n                    placeholder='Password'\n                    values={values.password}\n                    onChange={inputChange}\n\n                    />\n                </label>\n            </div>\n            <button type='submit'>Sign Up</button>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}
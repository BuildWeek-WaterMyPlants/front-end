{"ast":null,"code":"var _jsxFileName = \"/Users/briankubes/lambda/lambda_unit3/front-end/src/components/SignUp.js\";\nimport React, { useState, useEffect } from 'react';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport * as yup from 'yup';\nexport default function SignUp(props) {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const formSchema = yup.object().shape({\n    username: yup.string().required(2, \"Username is a required field.\"),\n    password: yup.string().required(\"Must include password.\")\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    formSchema.isValid(values).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [values]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitting \", values);\n    axiosWithAuth().post(\"/auth/register\", values).then(res => {\n      console.log(\"res from SignUp\", res);\n      window.localStorage.setItem('token', res.data.payload);\n      props.setIsLoggedIn(true);\n      props.history.push(\"/addplants\");\n      setValues({\n        username: \"\",\n        password: \"\"\n      });\n    }).catch(err => {\n      console.log(\"error with SignUp\", err);\n    });\n  };\n\n  const inputChange = e => {\n    e.persist();\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    validateChange(e);\n  };\n\n  const validateChange = e => {\n    // Reach will allow us to \"reach\" into the schema and test only one part.\n    yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\"\n      });\n    }).catch(err => {\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Enter your Username\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    values: values.username,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Enter a password\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    values: values.password,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: buttonDisabled,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"));\n}","map":{"version":3,"sources":["/Users/briankubes/lambda/lambda_unit3/front-end/src/components/SignUp.js"],"names":["React","useState","useEffect","axiosWithAuth","yup","SignUp","props","values","setValues","username","password","errors","setErrors","formSchema","object","shape","string","required","buttonDisabled","setButtonDisabled","isValid","then","valid","handleSubmit","e","preventDefault","console","log","post","res","window","localStorage","setItem","data","payload","setIsLoggedIn","history","push","catch","err","inputChange","persist","target","name","value","validateChange","reach","validate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport * as yup from 'yup';\n\n\nexport default function SignUp(props) {\n    const [values, setValues] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n\n    const [errors, setErrors] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n\n    const formSchema = yup.object().shape({\n        username: yup\n        .string()\n        .required(2, \"Username is a required field.\"), \n        password: yup\n          .string()\n          .required(\"Must include password.\"),\n      });\n\n      const [buttonDisabled, setButtonDisabled] = useState(true);\n\n      useEffect(() => {\n        formSchema.isValid(values).then(valid => {\n          setButtonDisabled(!valid);\n        });\n      }, [values]);\n\n\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submitting \", values);\n    axiosWithAuth().post(\"/auth/register\", values)\n    .then(res => {\n        console.log(\"res from SignUp\", res)\n        window.localStorage.setItem('token', res.data.payload)\n        props.setIsLoggedIn(true)\n        props.history.push(\"/addplants\")\n        setValues({\n            username: \"\",\n            password: \"\",\n        }); \n    })\n    .catch(err => {\n        console.log(\"error with SignUp\", err)\n    })    \n    };\n\n\n    const inputChange = e => {\n        e.persist();\n        setValues({\n          ...values,\n          [e.target.name]: e.target.value\n        });\n    \n        validateChange(e);\n      };\n\n      const validateChange = e => {\n        // Reach will allow us to \"reach\" into the schema and test only one part.\n        yup\n          .reach(formSchema, e.target.name)\n          .validate(e.target.value)\n          .then(valid => {\n            setErrors({\n              ...errors,\n              [e.target.name]: \"\"\n            });\n          })\n          .catch(err => {\n            setErrors({\n              ...errors,\n              [e.target.name]: err.errors[0]\n            });\n          });\n      };\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"username\">Enter your Username\n                    <input \n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"username\"\n                    values={values.username}\n                    onChange={inputChange}\n\n                    />\n                </label>\n            </div>\n            <div>\n                <label htmlFor=\"password\">Enter a password\n                    <input \n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    values={values.password}\n                    onChange={inputChange}\n                    />\n                </label>\n            </div>\n            <button disabled={buttonDisabled} type='submit'>Sign Up</button>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}